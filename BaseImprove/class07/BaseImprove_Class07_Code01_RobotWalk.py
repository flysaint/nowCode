# -*- coding: utf-8 -*-
"""
Created on Tue Jun 11 22:17:25 2019

@author: fly_s

题目一
机K器MP人算达法到扩指展定题位目置二方法数
【题目】
假设有排成一行的 N 个位置，记为 1~N，N 一定大于或等于 2。开始时机器人在其中的 M 位
置上(M 一定是 1~N 中的一个)，机器人可以往左走或者往右走，如果机器人来到 1 位置， 那
么下一步只能往右来到 2 位置;如果机器人来到 N 位置，那么下一步只能往左来到 N-1 位置。
规定机器人必须走 K 步，最终能来到 P 位置(P 也一定是 1~N 中的一个)的方法有多少种。给
定四个参数 N、M、K、P，返回方法数。
【举例】
N=5,M=2,K=3,P=3
上面的参数代表所有位置为 1 2 3 4 5。机器人最开始在 2 位置上，必须经过 3 步，最后到
达 3 位置。走的方法只有如下 3 种: 1)从2到1，从1到2，从2到3 2)从2到3，从3到2，从2到3
3)从2到3，从3到4，从4到3
所以返回方法数 3。 N=3,M=1,K=3,P=3
上面的参数代表所有位置为 1 2 3。机器人最开始在 1 位置上，必须经过 3 步，最后到达 3
位置。怎么走也不可能，所以返回方法数 0。

"""


def robitWalk(N,M,K,P):
    # 当 已经没有步数的时候
    if K == 0:
        return 1 if M == P else 0
    
    # 当 在1位置的时候，只能往2位置走
    if M == 1:
        return robitWalk(N,2,K-1,P)
    
    # 当来到N位置的时候，只能往N-1位置走
    if M == N:
        return robitWalk(N,N-1,K-1,P)
    
    # 其他情况 等于往左边和右边走的总和
    return robitWalk(N,M-1,K-1,P) + robitWalk(N,M+1,K-1,P)


N=3
M=1
K=3
P=3
robitWalk(N=3,M=1,K=3,P=3)

















    
    
    
    
    